library(igraph)
library(readxl)
# Load the dataset
df <- read_csv("D:/MSBA sem 2/network science/group assignment/data.csv")
library(igraph)
library(readxl)
# Load the dataset
df <- read.csv("D:/MSBA sem 2/network science/group assignment/data.csv")
# Create a directed graph
G <- graph.empty(directed = TRUE)
# Add stations as vertices
stations <- unique(c(df$`Start station number`, df$`End station number`))
G <- add_vertices(G, nv = length(stations), name = stations)
# Initialize an empty list for edge weights
edge_weights <- list()
# Add edges with weights
for (i in 1:nrow(df)) {
start_station <- as.character(df[i, 'Start station number'])
end_station <- as.character(df[i, 'End station number'])
edge_key <- paste(start_station, end_station, sep = "-")
if (!is.null(edge_weights[[edge_key]])) {
# Increment weight if the edge already exists
edge_weights[[edge_key]] <- edge_weights[[edge_key]] + 1
} else {
# Add a new edge with weight 1
edge_weights[[edge_key]] <- 1
}
}
# Add edges with their weights to the graph
for (edge_key in names(edge_weights)) {
stations_split <- strsplit(edge_key, "-")[[1]]
G <- add_edges(G, c(stations_split[1], stations_split[2]), attr = list(weight = edge_weights[[edge_key]]))
}
# Print the number of nodes and edges
num_nodes <- gorder(G)
cat("Number of nodes in Network_A:", num_nodes, "\n")
df$`Start station number` <- as.character(df$`Start station number`)
